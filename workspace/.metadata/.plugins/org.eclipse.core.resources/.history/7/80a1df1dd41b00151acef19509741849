package action;

import util.DBConnect;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import java.sql.PreparedStatement;
import action.form.AM_form;

public class Check_Admin extends Action {

	@Override
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws Exception {

		// アクションフォーム利用の為の定義
		AM_form queryForm = (AM_form) form;
		
		// 社員番号の頭文字にMがつくレコード取得のSQL文
		String sql = "SELECT * from employee where emp_no like 'M%'";

		// 社員番号・パスワードの取得
		String empNum = queryForm.getEmpNum();
		String empPass = queryForm.getEmpPass();
		System.out.println(empNum);
		System.out.println(empPass);

		int count = 0;
		String check = "NG";

		System.out.println("2");

		try (Connection con = DBConnect.con();) {
			PreparedStatement pstmt = con.prepareStatement(sql);
			ResultSet rs = pstmt.executeQuery();

			// 認証処理
			while (rs.next()) {
				if (count < rs.getRow()) {
					// 一致しなければ認証失敗
					if (empNum.startsWith("M")) {
						if (empPass.equals(rs.getString("emp_pass"))) {
							check = "OK";
							queryForm.setMessage1("");
							break;
						} else {
							queryForm.setMessage1("番号とパスワードの組み合わせが間違っています");
						}

					} else {
						queryForm.setMessage1("管理者権限のない番号です");
					}
				}
				count++;
			}
			System.out.println("3");

		} catch (ClassNotFoundException e) {
			System.out.println("Exception:" + e.getMessage());
			System.out.println("4");
		} catch (SQLException e) {
			System.out.println("Exception:" + e.getMessage());
			System.out.println("5");
		} catch (Exception e) {
			System.out.println("Exception:" + e.getMessage());
			System.out.println("6");
		}

		// マッピングに値を返す
		if (check.equals("OK")) {
			return (mapping.findForward("Admin"));
		} else {
			return (mapping.findForward("Top"));
		}
	}
}