package action;

import java.io.File;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import util.DBConnect;
import action.form.AM_form;

public class Output extends Action {

	@Override
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws Exception {

		System.out.println("Output開始");

		// アクションフォームに値を格納する為に定義
		AM_form queryForm = (AM_form) form;

		// メッセージを初期化
		queryForm.setMessageMain("");
		queryForm.setErrorMessage("");

		// 社員番号の取得
		String empNum = queryForm.getEmpNum();
		System.out.println(empNum);

		// 入力した年月の取得
		int output_year = queryForm.getOutput_year();
		int output_month = queryForm.getOutput_month();

		// ファイル名用の年月
		String fileDate = null;
		if (output_month < 10){					// output_monthが9以下の時は頭に0を付ける
			String fileMounth = "0" + output_month;
			fileDate = output_year + fileMounth;
		} else {
			fileDate = String.valueOf(output_year) + String.valueOf(output_month);
		}
		System.out.println(fileDate);

		// CSVファイルの保存場所 SQL文用
		String csvDestination = "C:\\\\AttendanceManagement\\\\CSV\\\\";

		// CSVファイルの保存場所 Java用
		String csvJava = "\"C:\\AttendanceManagement\\CSV\\";

		// DB接続用の変数用意
		Connection con = null;
		Statement stmt = null;
		ResultSet rs1 = null;
		ResultSet rs2 = null;

		// DB
		try {
			// DB接続
			Class.forName("com.mysql.jdbc.Driver").newInstance();
			con = DBConnect.getConnect();
			stmt = con.createStatement();
			System.out.println("DB接続");

			// 社員名の取得
			String nameSql = "SELECT emp_name FROM employee WHERE emp_no = '" + empNum + "'";
			rs1 = stmt.executeQuery(nameSql);
			rs1.next();
			String empName = rs1.getString("emp_name");
			System.out.println(empName + " ←社員名の取得結果");

			// ファイル名
			String fileName = "勤怠実績_" + empName + "_" + fileDate;
			System.out.println(fileName + " ←csvのファイル名");

			// 文字コードをUTF-8に
			String utfencCsvDestination = new String(csvDestination.getBytes("UTF-8"), "UTF-8");
			String utfencFileName = new String(fileName.getBytes("UTF-8"), "UTF-8");

			// CSVファイル出力のSQL文
			String csvSql = "SELECT * FROM work_info where emp_no = '" + empNum +"' AND work_year = " + output_year + " AND work_month = " + output_month + " INTO OUTFILE \"" + utfencCsvDestination + utfencFileName + ".csv\" FIELDS TERMINATED BY ',' OPTIONALLY ENCLOSED BY '" + "\"" + "'";
//			String csvSql = "SELECT '" + empName + "', '" + output_year + "年" + output_month + "月" + "' UNION SELECT date, work_start, work_last, real_start, real_last INTO OUTFILE \"" + utfencCsvDestination + utfencFileName + ".csv\" FIELDS TERMINATED BY ',' OPTIONALLY ENCLOSED BY '\"' FROM work_info where emp_no = \"" + empNum + "\" AND work_year = \"" + output_year + "\" AND work_month = \"" + output_month +"\"";
			System.out.println(csvSql + "\n↑CSVファイル出力のSQL文↑");

			// 既存ファイルの削除
			String csvDelete = csvJava + fileName + ".csv\"";
			File file = new File(csvDelete);
			if (file.exists()){
				file.delete();
			}
			System.out.println(csvDelete +" ←既存ファイルの削除の為のフルパス");

			// CSVファイルの出力
			rs2 = stmt.executeQuery(csvSql);
			System.out.println("CSVファイル出力のSQL文の発行成功");
			stmt.close();
			queryForm.setMessageMain(output_year + "年" + output_month + "月" + "を出力しました");
			queryForm.setErrorMessage("");
			System.out.println("出力成功");

		} catch (ClassNotFoundException e) {
			queryForm.setErrorMessage("出力に失敗しました");
			queryForm.setMessageMain("");
			System.out.println(e + "ドライバのロードに失敗");
		} catch (SQLException e) {
			queryForm.setErrorMessage("出力に失敗しました");
			queryForm.setMessageMain("");
			System.out.println(e + "SQL文が間違い");
		} catch (Exception e) {
			queryForm.setErrorMessage("出力に失敗しました");
			queryForm.setMessageMain("");
			System.out.println(e + "Exception:" + e.getMessage());
			queryForm.setErrorMessage("出力に失敗しました");
			queryForm.setMessageMain("");
			System.out.println(e + "出力失敗");
		} finally {
			try {
				if (con != null) {
					con.close();
				}
			} catch (SQLException e) {
				System.err.println(e);
			}

			try {
				if (stmt != null) {
					stmt.close();
				}
			} catch (SQLException e) {
				System.err.println(e);
			}

			try {
				if (rs1 != null) {
					rs1.close();
				}
			} catch (SQLException e) {
				System.err.println(e);
			}

			try {
				if (rs2 != null) {
					rs2.close();
				}
			} catch (SQLException e) {
				System.err.println(e);
			}
		}

		System.out.println("Output終了");

		// マッピングに値を返す
		return (mapping.findForward("Success"));
	}
}